//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: Hades PKG Files
//   Authors: Kurainu
//   Version: 
//   Purpose: Decompressed Hades pkg files Structure
//  Category: 
// File Mask: *.pkg
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

typedef struct
{    
    ubyte stringLength;
    local int stringLengthLocal = stringLength;
    if(stringLength > 127)
    {
        stringLengthLocal = (ubyte)stringLength & (ubyte)127;
        ubyte stringLength2;
        stringLengthLocal += stringLength2 * 128;
    }

    char Name[stringLengthLocal];
} String;

string function_readPrefixedLengthString (String &b){
    return b.Name;
}

enum <int> ImageFormat {
    None = 0,
    BC3 = 6,
    BC7 = 28,
};

typedef struct{
    ubyte EntryType <format=hex>;
    String Name <read=function_readPrefixedLengthString>;
    ubyte unk1[4];
    char Xnbmagic[4]; Assert( Xnbmagic == "XNBw","Not Matching XNBw Magic" );
    ubyte XnbVer; Assert( XnbVer == 5 || XnbVer == 6 ,"Unknown XNB Version" );
    ubyte flag;
    ubyte unk2[4];
    ImageFormat Format <comment="Shows the Compression Format of the Image">;
    uint Width;
    uint Height;
    uint MipLevel;
    uint ImageLength;
    ubyte ImageData[ImageLength];
} Texture;


local ubyte EntryType = ReadByte(FTell());

if (EntryType != 0xAD && EntryType != 0xAA) {
    Assert( false ,"Unknown EntryType" );
}

while(EntryType != 0xFF && EntryType != 0xBE){
    Texture tex;
    EntryType = ReadByte(FTell());
}